// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.

export type LiteClient = ReturnType<typeof createLiteClient>;

import { createHttpRequester } from '@algolia/requester-node-http';

import { createMemoryCache, createNullCache, createNullLogger } from '@algolia/client-common';

import type { ClientOptions } from '@algolia/client-common';

import { createLiteClient } from '../src/liteClient';

export { apiClientVersion } from '../src/liteClient';

export * from '../model';

export function liteClient(appId: string, apiKey: string, options?: ClientOptions | undefined): LiteClient {
  if (!appId || typeof appId !== 'string') {
    throw new Error('`appId` is missing.');
  }

  if (!apiKey || typeof apiKey !== 'string') {
    throw new Error('`apiKey` is missing.');
  }

  return createLiteClient({
    appId,
    apiKey,
    timeouts: {
      connect: 2000,
      read: 5000,
      write: 30000,
    },
    logger: createNullLogger(),
    requester: createHttpRequester(),
    algoliaAgents: [{ segment: 'Node.js', version: process.versions.node }],
    responsesCache: createNullCache(),
    requestsCache: createNullCache(),
    hostsCache: createMemoryCache(),
    ...options,
  });
}
