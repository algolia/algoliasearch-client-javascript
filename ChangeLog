CHANGELOG

UNRELEASED
    * FIX: Defaults to http when the protocol of the page is not http or
      https.

2015-28-03  3.0.3

    * FIX: Handle module loaders + cdn.jsdelivr.net/algoliasearch/latest usage
      When in this situation, the module loader would prevent the code
      detecting and loading the V2 to execute.
      Now fixed by prepending the migration-layer to the browserify bundle.
      It also removes the migration-layer code from the package managers (npm, bower) builds,
      where it makes no sense to have it
    * FIX: load V2 using a DOMElement when V3 is loaded ASYNCHRONOUSLY with /latest/
      * tested on all majors browsers:
        Chrome stable
        Firefox stable
        IE 8, 9, 10, 11
      * tested on correponding customer websites
    * FIX: better warning messages when using `latest` or trying to use V3 as V2

2015-26-03  3.0.2

    * temp /latest/ fix for some clients loading /latest/ in async mode

2015-26-03  3.0.1

    * fix npm usage, was missing a dependency

2015-25-03  3.0.0
    * V2 users, see the migration guide at https://github.com/algolia/algoliasearch-client-js/wiki/Migration-guide-from-2.x.x-to-3.x.x
    * BREAKING CHANGES:
      * `new AlgoliaSearch()` => `algoliasearch()` #40
        - The only exported global property is now `algoliasearch`
        - `opts`:
          - `dsnHost` removed, use `hosts:[dsnHost, other hosts]`
          - `dsn` removed, use `hosts:[non-dsn-host, non-dsn-host]`
          - `requestTimeoutInMs` renamed to `timeout`
          - `method` renamed to `protocol`. Protocol should be specified as `http:` or `https:`
          - `hosts` behavior changed, when using custom hosts:
            - no shuffling
            - no dsn host is prepended to the list
        - removed `AlgoliaExplainResults`, no obvious use ATM
        - calling algoliasearch() without an applicationID or apiKey will throw
        - Helper: `new AlgoliaSearchHelper()` => `algoliasearch.helper()`, same function signature
      * no more window.ALGOLIA_VERSION
        - you can find the version in algoliasearch.version
      * all api methods now use the (err, content) convention #43
        It means that instead of doing:
          ```js
            index.search(function found(success, content) {
              if (!success) {
                console.log('Error was:', content);
                return;
              }

              console.log('OK!', content);
            });
          ```
        You must do:
          ```js
            index.search(function found(err, content) {
              if (err) {
                console.log('Error was:', err);
                return;
              }

              console.log('OK!', content);
            });
          ```
        This is in par with most asynchronous APIS accepted/de vfacto conventions.
        It helps being compatible with control flow libraries like `async` and
        helps reduce WTF moments of Node.JS developers used to cb(err, content)
      * client.getLogs(cb[, offset, length]) is now .getLogs([offset, length, cb])
      * client.listIndexes(cb[, page]) => .listIndexes([page, cb])
      * client|index.addUserKeyWithValidity(acls, validity, maxQueriesPerIPPerHour, maxHitsPerQuery, cb) => client|index.addUserKeyWithValidity(acls, params, cb) where params = {validity:, maxQueriesPerIPPerHour:, maxHitsPerQuery:}
      * client.sendQueriesBatch(cb, delay) => client.sendQueriesBatch(cb)
      * index.addObject(content[, callback, objectID]) => index.addObject(content[, objectID, callback])
      * index.getObject(objectID[, callback, attributes]) => index.getObject(objectID[, attrs, callback])
      * index.search(query, callback[, params, delay]) => index.search(query[, params callback]) or index.search(params[, cb]) with params = {query: 'some thing'}
        We removed the delay option which should really be implemented by the module consumer. It's really a throttle/debounce of the search functions
      * index.browse(page, cb[, hitsPerPage]) => index.browse(page[, hitsPerPage, cb])
      * no more opts.jsonp in algoliasearch()
        Previously used as a way to force/disable jsonp. The request strategy is now more robust and does not
        requires jsonp: param
      * JSON2.js is no more included in the main build.
        If you need to support IE7 <= or IE8 quirks, add this:
          ```html
          <!--[if lte IE 7]>
          <script src="//cdnjs.cloudflare.com/ajax/libs/json2/20140204/json2.min.js"></script>
          <![endif]-->
          ```
      * removed AlgoliaSearchHelper
        Please see https://github.com/algolia/algoliasearch-helper-js if you need the helper
    * NEW FEATURES:
      * UMD compatibiliy #41
        - algoliasearch can now be used with any module loader
        - build is now done with browserify
        - no more grunt
      * All calls are now returning promises #45
        If there's a callback given to an API call, you won't get a promise.
        Here are the different promises implementations we use:
        - Native promises by default (https://github.com/jakearchibald/es6-promise/)
        - AngularJS promises for AngularJS plugin
        - jQuery promises for jQuery plugin
    * FIXES:
      * do not retry when server sends 4xx or 1xx
      * distinguish jQuery/AngularJS request timeouts from errors and thus retry when timeout
      * JSONP fallback when jQuery/AngularJS request error
    * MISC:
      * Externalize plugins and request implementations
      * some linting fixes
      * test suite, including request strategy test suite
      * IE10 should now behave as a CORS supported XMLHttpRequest browser, as it is
      * running tests on many browsers, using saucelabs
      * removed vendor/
        - vendor/json2.js
        - vendor/jquery.typeahead.js now on cdnjs (examples)

2015-02-03  2.9.2
    * Fixed calls to `.search(function() {})`, `.search(null, function() {})`, `.search(undefined, function() {})
    * Fixed shared cache amongst instances

2015-02-03  2.9.1
    * Fixed listIndexes pagination, not working if page=0

2015-01-13  2.9.0
    * Angular.js & jQuery compatibility (returning promises)
    * Helper: ability to exclude facets

2015-01-13  2.8.6
    * Search helper: ability to set default facet filters

2015-01-07  2.8.5
    * Avoid CORS preflight request

2014-12-31  2.8.4
    * Fixed a bug in JSONP fallback on multi-queries and getObject when a secured API Key was used (X-Algolia-TagFilters parameter was not set, resulting in a 403 permission denied error)

2014-12-30  2.8.3
    * Helper optimization: number of nested queries is now driven by the number of refined disjunctive facets only

2014-12-23  2.8.2
    * Increase the request timeout after each retry

2014-12-09  2.8.1
    * Enabled DSN by default (is working even if only one datacenter is selected)

2014-11-28  2.8.0
    * Move to algolia.net by default

2014-11-25  2.7.5
    * Expose one option to select the TTL (prepare migration to .net, allow to gain some milliseconds compared to .io)

2014-11-12  2.7.4
    * Expose more options (jsonp & requestTimeoutInMs)
    * Change the way the JSONP fallback works

2014-10-29  2.7.3
  * Reintroduced Algolia Custom Headers (X-Algolia-*) on queries. It was removed to try to remove the CORS OPTIONS query but this has no impact because this is a POST action.

2014-10-27  2.7.2
  * Fixed browse method (author @muertet)

2014-10-15  2.7.{0,1}
  * Refactor the AlgoliaSearch constructor to allows optional/named arguments

2014-10-07  2.6.6
  * Fixed bower integration

2014-09-26  2.6.5
  * Optimize disjunctive queries that were retrieving useless attributes

2014-09-23  2.6.4
   * Fixed CORS handling issue on IE8/IE9

2014-09-23  2.6.3
   * Fixed IE11-based AJAX calls

2014-09-20  2.6.2
   * Updated package manager description files: npm and jsdelivr

2014-09-20  2.6.1
   * Fixed JSONP call: 'X-Algolia-TagFilters' and 'X-Algolia-UserToken' were not included in the URL.

2014-09-06  2.6.0
   * Improved retry strategy with implementation of a timeout on network call.
     Upgrade to this version is highly recommended

2014-09-04  2.5.4
    * Removed the OPTIONS request for the first isalive query of for all search queries

2014-07-23  2.5.3
    * AlgoliaSearchHelper: add missing getIndex/setIndex
    * listIndexes is now paginable

2014-06-05  2.5.2
    * AlgoliaSearchHelper: add getter/setter methods

2014-05-14  2.5.1
    * Fixed listIndexes call (trailing slash not compatible with our API anymore)

2014-05-09  2.5.0
    * If CORS is not available, use JSONP

2014-04-23  2.4.7
     * Ability to instantiate multiple AlgoliaSearchHelper

2014-04-05  2.4.6
     * Fixed IE 8/9 support of secured API keys

2014-03-30  2.4.5
     * Improved AlgoliaExplainResults helper handling array-based attributes as well.

2014-03-19  2.4.4
     * Improved the `waitTask` method, ensuring it sleeps 100ms before recalling the API.

2014-03-12  2.4.3
     * Removed invalid character from source code (could cause a parse error in IE8/9)

2014-02-24  2.4.2
     * Added support of secured API Key (SecurityTags & UserToken headers)

2014-02-18  2.4.1
     * Removed dependency on jquery

2014-02-10  2.4.0

      * Move to official Typeahead.js release (0.10.1)
      * Remove getTypeAheadTransport* functions

2014-01-16  2.3.8

      * Ability to customize getTypeAheadTransport parameters once instantiated

2014-01-08  2.3.7

      * Remove extra encodeURI
      * Travis integration

2014-01-06  2.3.6

      * Missing encodeURI
      * Added "distinct" documentation

2013-12-06  2.3.5

      * Added browse methods

2013-12-04 2.3.4-1

      * Fixed IE9 bug while reading onload's event
      * Here and there typos

2013-11-07 2.3.0

      * Added new ACL features (maxQueriesPerIPPerHour & maxHitsPerQuery)

2013-11-07 2.2.0

      * Added clearIndex method

2013-11-03 2.1.0

      * Auto-detect protocol to used based on current location
      * Added auto-complete & instant-search examples

2013-10-15 2.0.1

      * Gruntification
      * Embed typeahead.js
